{"version":3,"file":"angular2-hotkeys.js","sources":["angular2-hotkeys/lib/hotkey.model.ts","angular2-hotkeys/lib/hotkey.options.ts","angular2-hotkeys/lib/hotkeys.service.ts","angular2-hotkeys/lib/hotkeys.directive.ts","angular2-hotkeys/lib/hotkeys-cheatsheet/hotkeys-cheatsheet.component.ts","angular2-hotkeys/lib/hotkey.module.ts","angular2-hotkeys/public-api.ts","angular2-hotkeys/angular2-hotkeys.ts"],"names":[],"mappings":"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","sourcesContent":["export interface ExtendedKeyboardEvent extends KeyboardEvent {\n    returnValue: boolean; // IE returnValue\n}\n\nexport class Hotkey {\n    private formattedHotkey: string[];\n\n    static symbolize(combo: string): string {\n        const map: any = {\n            command: '\\u2318',       // ⌘\n            shift: '\\u21E7',         // ⇧\n            left: '\\u2190',          // ←\n            right: '\\u2192',         // →\n            up: '\\u2191',            // ↑\n            down: '\\u2193',          // ↓\n            // tslint:disable-next-line:object-literal-key-quotes\n            'return': '\\u23CE',      // ⏎\n            backspace: '\\u232B'      // ⌫\n        };\n        const comboSplit: string[] = combo.split('+');\n\n        for (let i = 0; i < comboSplit.length; i++) {\n            // try to resolve command / ctrl based on OS:\n            if (comboSplit[i] === 'mod') {\n                if (window.navigator && window.navigator.platform.indexOf('Mac') >= 0) {\n                    comboSplit[i] = 'command';\n                } else {\n                    comboSplit[i] = 'ctrl';\n                }\n            }\n\n            comboSplit[i] = map[comboSplit[i]] || comboSplit[i];\n        }\n\n        return comboSplit.join(' + ');\n    }\n\n    /**\n     * Creates a new Hotkey for Mousetrap binding\n     *\n     * @param combo       mousetrap key binding\n     * @param description description for the help menu\n     * @param callback    method to call when key is pressed\n     * @param action      the type of event to listen for (for mousetrap)\n     * @param allowIn     an array of tag names to allow this combo in ('INPUT', 'SELECT', and/or 'TEXTAREA')\n     * @param persistent  if true, the binding is preserved upon route changes\n     */\n    constructor(public combo: string | string[], public callback: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent | boolean,\n                public allowIn?: string[], public description?: string | Function, public action?: string,\n                public persistent?: boolean) {\n        this.combo = (Array.isArray(combo) ? combo : [combo as string]);\n        this.allowIn = allowIn || [];\n        this.description = description || '';\n    }\n\n    get formatted(): string[] {\n        if (!this.formattedHotkey) {\n\n            const sequence: string[] = this.combo as Array<string>;\n            for (let i = 0; i < sequence.length; i++) {\n                sequence[i] = Hotkey.symbolize(sequence[i]);\n            }\n            this.formattedHotkey = sequence;\n        }\n        return this.formattedHotkey;\n    }\n}\n","import { InjectionToken } from '@angular/core';\n\nexport interface IHotkeyOptions {\n    /**\n     * Disable the cheat sheet popover dialog? Default: false\n     */\n    disableCheatSheet?: boolean;\n    /**\n     * Key combination to trigger the cheat sheet. Default: '?'\n     */\n    cheatSheetHotkey?: string;\n\n    /**\n     * Use also ESC for closing the cheat sheet. Default: false\n     */\n    cheatSheetCloseEsc?: boolean;\n    /**\n     * Description for the ESC key for closing the cheat sheet (if enabed). Default: 'Hide this help menu'\n     */\n    cheatSheetCloseEscDescription?: string;\n    /**\n     * Description for the cheat sheet hot key in the cheat sheet. Default: 'Show / hide this help menu'\n     */\n    cheatSheetDescription?: string;\n}\n\nexport const HotkeyOptions = new InjectionToken<IHotkeyOptions>('HotkeyOptions');\n","import { Inject, Injectable } from '@angular/core';\nimport { Hotkey } from './hotkey.model';\nimport { Subject } from 'rxjs';\nimport { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport 'mousetrap';\n\n@Injectable({\n    providedIn: 'root'\n})\nexport class HotkeysService {\n    hotkeys: Hotkey[] = [];\n    pausedHotkeys: Hotkey[] = [];\n    mousetrap: MousetrapInstance;\n    cheatSheetToggle: Subject<any> = new Subject();\n\n    private preventIn = ['INPUT', 'SELECT', 'TEXTAREA'];\n\n    constructor(@Inject(HotkeyOptions) private options: IHotkeyOptions) {\n        // noinspection JSUnusedGlobalSymbols,JSUnusedLocalSymbols\n        Mousetrap.prototype.stopCallback = (event: KeyboardEvent, element: HTMLElement, combo: string, callback: Function) => {\n            // if the element has the class \"mousetrap\" then no need to stop\n            if ((' ' + element.className + ' ').indexOf(' mousetrap ') > -1) {\n                return false;\n            }\n            return (element.contentEditable && element.contentEditable === 'true');\n        };\n        this.mousetrap = new (Mousetrap as any)();\n        if (!this.options.disableCheatSheet) {\n            this.add(new Hotkey(\n                this.options.cheatSheetHotkey || '?',\n                function(_: KeyboardEvent) {\n                    this.cheatSheetToggle.next();\n                }.bind(this),\n                [],\n                this.options.cheatSheetDescription || 'Show / hide this help menu',\n            ));\n        }\n\n        if (this.options.cheatSheetCloseEsc) {\n            this.add(new Hotkey(\n                'esc',\n                function(_: KeyboardEvent) {\n                    this.cheatSheetToggle.next(false);\n                }.bind(this),\n                ['HOTKEYS-CHEATSHEET'],\n                this.options.cheatSheetCloseEscDescription || 'Hide this help menu',\n            ));\n        }\n\n    }\n\n    add(hotkey: Hotkey | Hotkey[], specificEvent?: string): Hotkey | Hotkey[] {\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.add(key, specificEvent) as Hotkey);\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.hotkeys.push(hotkey as Hotkey);\n        this.mousetrap.bind((hotkey as Hotkey).combo, (event: KeyboardEvent, combo: string) => {\n            let shouldExecute = true;\n\n            // if the callback is executed directly `hotkey.get('w').callback()`\n            // there will be no event, so just execute the callback.\n            if (event) {\n                const target: HTMLElement = (event.target || event.srcElement) as HTMLElement; // srcElement is IE only\n                const nodeName: string = target.nodeName.toUpperCase();\n\n                // check if the input has a mousetrap class, and skip checking preventIn if so\n                if ((' ' + target.className + ' ').indexOf(' mousetrap ') > -1) {\n                    shouldExecute = true;\n                } else if (this.preventIn.indexOf(nodeName) > -1 &&\n                    (hotkey as Hotkey).allowIn.map(allow => allow.toUpperCase()).indexOf(nodeName) === -1) {\n                    // don't execute callback if the event was fired from inside an element listed in preventIn but not in allowIn\n                    shouldExecute = false;\n                }\n            }\n\n            if (shouldExecute) {\n                return (hotkey as Hotkey).callback.apply(this, [event, combo]);\n            }\n        }, specificEvent);\n        return hotkey;\n    }\n\n    remove(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        const temp: Hotkey[] = [];\n        if (!hotkey) {\n            for (const key of this.hotkeys) {\n                temp.push(this.remove(key) as Hotkey);\n            }\n            return temp;\n        }\n        if (Array.isArray(hotkey)) {\n            for (const key of hotkey) {\n                temp.push(this.remove(key) as Hotkey);\n            }\n            return temp;\n        }\n        const index = this.findHotkey(hotkey as Hotkey);\n        if (index > -1) {\n            this.hotkeys.splice(index, 1);\n            this.mousetrap.unbind((hotkey as Hotkey).combo);\n            return hotkey;\n        }\n        return null;\n    }\n\n    get(combo?: string | string[]): Hotkey | Hotkey[] {\n        if (!combo) {\n            return this.hotkeys;\n        }\n        if (Array.isArray(combo)) {\n            const temp: Hotkey[] = [];\n            for (const key of combo) {\n                temp.push(this.get(key) as Hotkey);\n            }\n            return temp;\n        }\n        for (const hotkey of this.hotkeys) {\n            if (hotkey.combo.indexOf(combo as string) > -1) {\n                return hotkey;\n            }\n        }\n        return null;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    pause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        if (!hotkey) {\n            return this.pause(this.hotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.pause(key) as Hotkey);\n            }\n            return temp;\n        }\n        this.remove(hotkey);\n        this.pausedHotkeys.push(hotkey as Hotkey);\n        return hotkey;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    unpause(hotkey?: Hotkey | Hotkey[]): Hotkey | Hotkey[] {\n        if (!hotkey) {\n            return this.unpause(this.pausedHotkeys);\n        }\n        if (Array.isArray(hotkey)) {\n            const temp: Hotkey[] = [];\n            for (const key of hotkey) {\n                temp.push(this.unpause(key) as Hotkey);\n            }\n            return temp;\n        }\n        const index: number = this.pausedHotkeys.indexOf(hotkey as Hotkey);\n        if (index > -1) {\n            this.add(hotkey);\n            return this.pausedHotkeys.splice(index, 1);\n        }\n        return null;\n    }\n\n    // noinspection JSUnusedGlobalSymbols\n    reset() {\n        this.mousetrap.reset();\n    }\n\n    private findHotkey(hotkey: Hotkey): number {\n        return this.hotkeys.indexOf(hotkey);\n    }\n}\n","import { Directive, ElementRef, Input, OnDestroy, OnInit } from '@angular/core';\nimport { ExtendedKeyboardEvent, Hotkey } from './hotkey.model';\nimport { HotkeysService } from './hotkeys.service';\nimport 'mousetrap';\n\n@Directive({\n    selector: '[hotkeys]',\n    providers: [HotkeysService]\n})\nexport class HotkeysDirective implements OnInit, OnDestroy {\n    @Input() hotkeys: { [combo: string]: (event: KeyboardEvent, combo: string) => ExtendedKeyboardEvent }[];\n\n    private mousetrap: MousetrapInstance;\n    private hotkeysList: Hotkey[] = [];\n    private oldHotkeys: Hotkey[] = [];\n\n    constructor(private hotkeysService: HotkeysService, private elementRef: ElementRef) {\n        this.mousetrap = new Mousetrap(this.elementRef.nativeElement); // Bind hotkeys to the current element (and any children)\n    }\n\n    ngOnInit() {\n        for (const hotkey of this.hotkeys) {\n            const combo = Object.keys(hotkey)[0];\n            const hotkeyObj: Hotkey = new Hotkey(combo, hotkey[combo]);\n            const oldHotkey: Hotkey = this.hotkeysService.get(combo) as Hotkey;\n            if (oldHotkey !== null) { // We let the user overwrite callbacks temporarily if you specify it in HTML\n                this.oldHotkeys.push(oldHotkey);\n                this.hotkeysService.remove(oldHotkey);\n            }\n            this.hotkeysList.push(hotkeyObj);\n            this.mousetrap.bind(hotkeyObj.combo, hotkeyObj.callback);\n        }\n    }\n\n    ngOnDestroy() {\n        for (const hotkey of this.hotkeysList) {\n            this.mousetrap.unbind(hotkey.combo);\n        }\n        this.hotkeysService.add(this.oldHotkeys);\n    }\n\n}\n","import { Component, Input, OnDestroy, OnInit } from '@angular/core';\nimport { Hotkey } from '../hotkey.model';\nimport { HotkeysService } from '../hotkeys.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n    selector: 'hotkeys-cheatsheet',\n    templateUrl: './hotkeys-cheatsheet.component.html',\n    styleUrls: ['./hotkeys-cheatsheet.component.css']\n})\nexport class HotkeysCheatsheetComponent implements OnInit, OnDestroy {\n    helpVisible = false;\n    @Input() title = 'Keyboard Shortcuts:';\n    subscription: Subscription;\n\n    hotkeys: Hotkey[];\n\n    constructor(private hotkeysService: HotkeysService) {\n    }\n\n    public ngOnInit(): void {\n        this.subscription = this.hotkeysService.cheatSheetToggle.subscribe((isOpen) => {\n            if (isOpen !== false) {\n                this.hotkeys = this.hotkeysService.hotkeys.filter(hotkey => hotkey.description);\n            }\n\n            if (isOpen === false) {\n                this.helpVisible = false;\n            } else {\n                this.toggleCheatSheet();\n            }\n        });\n    }\n\n    public ngOnDestroy(): void {\n        if (this.subscription) {\n            this.subscription.unsubscribe();\n        }\n    }\n\n    public toggleCheatSheet(): void {\n        this.helpVisible = !this.helpVisible;\n    }\n}\n","import { ModuleWithProviders, NgModule } from '@angular/core';\nimport { HotkeysDirective } from './hotkeys.directive';\nimport { HotkeysCheatsheetComponent } from './hotkeys-cheatsheet/hotkeys-cheatsheet.component';\nimport { CommonModule } from '@angular/common';\nimport { HotkeyOptions, IHotkeyOptions } from './hotkey.options';\nimport { HotkeysService } from './hotkeys.service';\n\n@NgModule({\n    declarations: [HotkeysDirective, HotkeysCheatsheetComponent],\n    imports: [CommonModule],\n    exports: [HotkeysDirective, HotkeysCheatsheetComponent]\n})\nexport class HotkeyModule {\n    // noinspection JSUnusedGlobalSymbols\n    static forRoot(options: IHotkeyOptions = {}): ModuleWithProviders<HotkeyModule> {\n        return {\n            ngModule : HotkeyModule,\n            providers : [\n                HotkeysService,\n                {provide : HotkeyOptions, useValue : options}\n            ]\n        };\n    }\n}\n","/*\n * Public API Surface of angular2-hotkeys\n */\n\nexport * from './lib/hotkeys.service';\nexport * from './lib/hotkeys.directive';\nexport * from './lib/hotkeys-cheatsheet/hotkeys-cheatsheet.component';\nexport * from './lib/hotkey.model';\nexport * from './lib/hotkey.options';\nexport * from './lib/hotkey.module';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"]}